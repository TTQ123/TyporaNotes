*{
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body{
    background-color: #23262d;
}

.container{
    width: 400px;
    height: 400px;
    margin: 0 auto;
    margin-top: 100px;
    display: grid;
    // 一行的分配
    grid-template-rows: 1fr 1fr 1fr;
    // 一列的分配
    grid-template-columns: 1fr 1fr 1fr;
    // 网格布局的间距
    gap: 10px;
    transition: 0.2s;
}

// 使用scss循环
@for $i from 0 to 9 {
    .item:nth-child(#{$i + 1}){
        // hsl是色相度(反正循环颜色用这种)
        background-color: hsl($i * 40%, 100%, 74%);
    }
    // 当我鼠标移入的时候 希望父元素的行列分配发生变化 这需要用has选择器
    .container:has(.item:nth-child(#{$i + 1}):hover){
        // 当第一个元素进来的时候就是第一行第一列(0/3 + 1 和 0%/3 + 1)
        // 计算出第几行
        $r: floor($i / 3) + 1;
        // 计算出第几列
        $c: $i % 3 + 1;

        // 定义一个数组(分配复元素的行列)
        $arr: 1fr 1fr 1fr;
        // set-nth传入一个列表 选择需要替换的位置 替换的值
        // 计算出第几行的分配
        $rows:set-nth($arr, $r, 2fr);
        // 计算出第几列的分配
        $cols:set-nth($arr, $c, 2fr);
        // 一行的分配
        grid-template-rows: $rows;
        // 一列的分配
        grid-template-columns: $cols;
    }
}

